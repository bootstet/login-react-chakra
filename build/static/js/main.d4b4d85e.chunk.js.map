{"version":3,"sources":["components/SignUp.js","components/SignIn.js","components/Form.js","components/App.js","index.js"],"names":["SignUp","formik","useFormik","initialValues","username","password","onSubmit","values","console","log","params","user","email","axios","url","method","data","headers","then","res","alert","catch","err","error","handleSubmit","spacing","isInvalid","children","placeholder","name","value","onChange","handleChange","type","id","mr","htmlFor","_hover","bgColor","w","colorScheme","SignIn","Form","useColorModeValue","p","boxShadow","borderRadius","isFitted","_focus","_selected","color","App","mx","mt","ReactDOM","render","theme","document","getElementById"],"mappings":"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","file":"static/js/main.d4b4d85e.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Input,\n  InputGroup,\n  Stack,\n  InputLeftAddon,\n  FormHelperText,\n  Switch,\n  FormLabel,\n  Flex,\n  Button,\n  FormControl\n} from \"@chakra-ui/core\";\nimport { FaUserAlt, FaLock } from \"react-icons/fa\";\nimport { useFormik } from \"formik\";\n\nimport axios from 'axios'\n\nexport default function SignUp() {\n  const submit = (values) => {\n    console.log('values', values)\n    const params = {\n      user: {\n        email: values.username,\n        password: values.password\n      }\n    }\n    axios({\n      url: 'https://conduit.productionready.io/api/users/login',\n      method: 'post',\n      data: params,\n      headers: { 'content-type': 'application/json' },\n    }\n    ).then(\n      res => {\n        console.log(res)\n        alert('登陆成功')\n      }\n    ).catch(\n      err => {\n        console.error(err)\n        alert('用户名或者密码错误，请重新输入')\n      }\n    )\n  }\n  const formik = useFormik({ initialValues: { username: \"zhangsan\", password: \"123\"}, onSubmit: submit})\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <Stack spacing=\"2\">\n        <FormControl isInvalid>\n          <InputGroup>\n            <InputLeftAddon children={<FaUserAlt />} />\n            <Input \n              placeholder=\"手机号或邮箱\" \n              name=\"username\" \n              value={formik.values.username} \n              onChange={formik.handleChange}\n            />\n          </InputGroup>\n          <FormHelperText>用户名是填项</FormHelperText>\n        </FormControl>\n        <InputGroup>\n          <InputLeftAddon children={<FaLock />} />\n          <Input \n            type=\"password\" \n            placeholder=\"密码\" \n            name=\"password\"\n            value={formik.values.password} \n            onChange={formik.handleChange}\n          />\n        </InputGroup>\n        <Flex>\n          <Switch id=\"deal\" mr=\"3\" />\n          <FormLabel htmlFor=\"deal\">记住我</FormLabel>\n        </Flex>\n        <Button type=\"submit\" _hover={{ bgColor: \"tomato\" }} w=\"100%\" colorScheme=\"teal\">\n          登录\n        </Button>\n      </Stack>\n    </form>\n  );\n}\n","import React from \"react\";\nimport {\n  Input,\n  InputGroup,\n  Stack,\n  InputLeftAddon,\n  FormHelperText,\n  Button,\n  FormControl\n} from \"@chakra-ui/core\";\nimport { FaUserAlt, FaLock } from \"react-icons/fa\";\nimport { useFormik } from 'formik';\nimport axios from 'axios';\n\nexport default function SignIn() {\n\n  const onSubmit = (values) => {\n    console.log('values', values)\n    const params = {\n      username: values.username,\n      email: values.email,\n      password: values.password\n    }\n    axios({\n      method: 'post',\n      url: 'https://conduit.productionready.io/api/users',\n      data: {\n        \"user\": params\n      },\n      headers: { 'content-type': 'application/json' },\n    }).then(res => {\n      console.log(res)\n    }).catch(err => {\n      console.error(err)\n    })\n  }\n\n  const initialValues = {\n    username: '',\n    email: '',\n    password: '',\n  }\n  const formik = useFormik({ initialValues, onSubmit})\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <Stack spacing=\"2\">\n        <FormControl isInvalid>\n          <InputGroup>\n            <InputLeftAddon children={<FaUserAlt />} />\n            <Input \n              placeholder=\"请输入用户名\" \n              name=\"username\"\n              value={formik.values.username}\n              onChange={formik.handleChange}\n            />\n          </InputGroup>\n          <FormHelperText>用户名是填项</FormHelperText>\n        </FormControl>\n        <InputGroup>\n          <InputLeftAddon children={<FaLock />} />\n          <Input \n            placeholder=\"邮箱\" \n            name=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n          />\n        </InputGroup>\n        <InputGroup>\n          <InputLeftAddon children={<FaLock />} />\n          <Input \n            type=\"password\" \n            placeholder=\"设置密码\" \n            name=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n          />\n        </InputGroup>\n        <Button type=\"submit\" _hover={{ bgColor: \"tomato\" }} w=\"100%\" colorScheme=\"teal\">\n          注册\n        </Button>\n      </Stack>\n    </form>\n  );\n}\n","import React from \"react\";\nimport {\n  Tabs,\n  TabList,\n  Tab,\n  TabPanel,\n  TabPanels,\n  Box,\n  useColorModeValue\n} from \"@chakra-ui/core\";\nimport SignUp from \"./SignUp\";\nimport SignIn from \"./SignIn\";\n\nexport default function Form() {\n  const bgColor = useColorModeValue('gray.200', 'gray.700');\n  return (\n    <Box bgColor={bgColor} p={3} w=\"100%\" boxShadow=\"lg\" borderRadius=\"lg\">\n      <Tabs isFitted>\n        <TabList>\n          <Tab _focus={{ boxShadow: \"none\" }} _selected={{ color: \"#e6af5a\" }}>登录</Tab>\n          <Tab _focus={{ boxShadow: \"none\" }} _selected={{ color: \"#e6af5a\" }}>注册</Tab>\n        </TabList>\n        <TabPanels>\n          <TabPanel>\n            <SignUp />\n          </TabPanel>\n          <TabPanel>\n            <SignIn />\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box } from \"@chakra-ui/core\"\nimport Form from \"./Form\"\n\nfunction App() {\n  return (\n    <Box w={1 / 2 } mx=\"auto\" mt=\"100px\">\n      <Form />\n    </Box>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ChakraProvider, CSSReset } from '@chakra-ui/core';\nimport App from './components/App';\nimport theme from '@chakra-ui/theme';\n\n\nReactDOM.render(\n  <Router>\n    <ChakraProvider theme={theme}>\n      <CSSReset/>\n      <App/>\n    </ChakraProvider>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}